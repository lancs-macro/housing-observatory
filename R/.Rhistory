lr <- ukhp_get("england-and-wales")
library(jsonlite)
library(httr)
ukhp_get <- function(frequency = "monthly", classification = "nuts1", release = "latest") {
endpoint <- "https://lancs-macro.github.io/uk-house-prices"
query <- paste(endpoint, release, frequency, paste0(classification, ".json"), sep = "/")
request <- GET(query)
stop_for_status(request)
parse_json(request, simplifyVector = TRUE)
}
ukhp_get(classification = "aggregate")
ukhp_get <- function(frequency = "monthly", classification = "aggregate", release = "latest") {
endpoint <- "https://lancs-macro.github.io/uk-house-prices"
query <- paste(endpoint, release, frequency, paste0(classification, ".json"), sep = "/")
request <- GET(query)
stop_for_status(request)
parse_json(request, simplifyVector = TRUE)
}
ukhp_get <- function(frequency = "monthly", classification = "aggregate", release = "latest") {
endpoint <- "https://lancs-macro.github.io/uk-house-prices"
query <- paste(endpoint, release, frequency, paste0(classification, ".json"), sep = "/")
return(query)
request <- GET(query)
stop_for_status(request)
parse_json(request, simplifyVector = TRUE)
}
ukhp_get(classification = "aggregate")
ukhp_get <- function(frequency = "monthly", classification = "aggregate", release = "latest") {
endpoint <- "https://lancs-macro.github.io/uk-house-prices"
query <- paste(endpoint, "releases", release, frequency, paste0(classification, ".json"), sep = "/")
return(query)
request <- GET(query)
stop_for_status(request)
parse_json(request, simplifyVector = TRUE)
}
ukhp_get(classification = "aggregate")
query <- paste(endpoint, "releases", release, frequency, paste0(classification, ".json"), sep = "/")
ukhp_get <- function(frequency = "monthly", classification = "aggregate", release = "latest") {
endpoint <- "https://lancs-macro.github.io/uk-house-prices"
query <- paste(endpoint, "releases", release, frequency, paste0(classification, ".json"), sep = "/")
request <- GET(query)
stop_for_status(request)
parse_json(request, simplifyVector = TRUE)
}
ukhp_get(classification = "aggregate")
library(dplyr)
lr <- ukhp_get("england-and-wales")
lr <- ukhp_get("england-and-wales")
lr <- ukhp_get("england")
lr <- uklr::ukhp_get("england-and-wales")
lr
ho <- as_tibble(ukhp_get(classification = "aggregate"))
ho
lr <- uklr::ukhp_get("england")
lr
lr %>% View()
ho <- as_tibble(ukhp_get(classification = "countries"))
ho
ukhp_get <- function(frequency = "monthly", classification = "aggregate", release = "latest") {
endpoint <- "https://lancs-macro.github.io/uk-house-prices"
query <- paste(endpoint, "releases", release, frequency, paste0(classification, ".json"), sep = "/")
request <- GET(query)
stop_for_status(request)
parse_json(request, simplifyVector = TRUE)
}
ho <- as_tibble(ukhp_get(classification = "countries"))
ho
ho
str(ho)
lr
mutate(region = toupper(substring(region, 1,1))
lr %>%
mutate(region = toupper(substring(region, 1, 1)))
?toupper
lr %>%
mutate(region = paste0(toupper(substring(s, 1,1)), substring(s, 2)))
lr %>%
mutate(region = paste0(toupper(substring(region, 1,1)), substring(region, 2)))
library(tidyverse)
lr %>%
mutate(region = str_to_title(region))
lr %>%
mutate(region = str_to_title(region), Date = date)
lr %>%
mutate(region = str_to_title(region)) %>%
select(Date = date, Price = housePriceIndex)
lr %>%
mutate(region = str_to_title(region)) %>%
select(Date = date, region, Price = housePriceIndex)
ho
ho %>%
select(-Wales) %>%
pivot_longer(-Date)
library(tidyverse)
ho %>%
select(-Wales) %>%
pivot_longer(-Date)
ho %>%
select(-Wales) %>%
tidyr::pivot_longer(-Date)
install.packages("tidyr")
library(jsonlite)
library(httr)
ukhp_get <- function(frequency = "monthly", classification = "aggregate", release = "latest") {
endpoint <- "https://lancs-macro.github.io/uk-house-prices"
query <- paste(endpoint, "releases", release, frequency, paste0(classification, ".json"), sep = "/")
request <- GET(query)
stop_for_status(request)
parse_json(request, simplifyVector = TRUE)
}
library(uklr)
library(dplyr)
library(tidyverse)
lr <- uklr::ukhp_get("england")
lr %>%
mutate(region = str_to_title(region)) %>%
select(Date = date, region, Price = housePriceIndex)
ho <- as_tibble(ukhp_get(classification = "countries"))
ho %>%
select(-Wales) %>%
tidyr::pivot_longer(-Date)
ho %>%
select(-Wales) %>%
pivot_longer(-Date)
install.packages("tidyr")
library(jsonlite)
library(httr)
ukhp_get <- function(frequency = "monthly", classification = "aggregate", release = "latest") {
endpoint <- "https://lancs-macro.github.io/uk-house-prices"
query <- paste(endpoint, "releases", release, frequency, paste0(classification, ".json"), sep = "/")
request <- GET(query)
stop_for_status(request)
parse_json(request, simplifyVector = TRUE)
}
library(uklr)
library(dplyr)
library(tidyverse)
lr <- uklr::ukhp_get("england")
lr %>%
mutate(region = str_to_title(region)) %>%
select(Date = date, region, Price = housePriceIndex)
ho <- as_tibble(ukhp_get(classification = "countries"))
ho %>%
select(-Wales) %>%
pivot_longer(-Date)
ho %>%
select(-Wales) %>%
pivot_longer(-Date, names_to = c("region", "Price"))
ho %>%
select(-Wales) %>%
pivot_longer(-Date, names_to = c("region", "Price"))
?pivot_longer
ho %>%
select(-Wales) %>%
pivot_longer(-Date, names_to = "region")
ho %>%
select(-Wales) %>%
pivot_longer(-Date, names_to = "region", values_to = "Price")
lr_tidy <- lr %>%
mutate(region = str_to_title(region)) %>%
select(Date = date, region, Price = housePriceIndex)
ho <- as_tibble(ukhp_get(classification = "countries"))
ho_tidy <- ho %>%
select(-Wales) %>%
pivot_longer(-Date, names_to = "region", values_to = "Price")
full_join(lr_tidy, ho_tidy)
lr_tidy
ho_tidy
ho_tidy <- ho %>%
mutate(Date = as.Date(Date)) %>%
select(-Wales) %>%
pivot_longer(-Date, names_to = "region", values_to = "Price")
full_join(lr_tidy, ho_tidy)
lr_tidy <- lr %>%
mutate(region = str_to_title(region)) %>%
select(Date = date, region, lr = housePriceIndex)
ho <- as_tibble(ukhp_get(classification = "countries"))
ho_tidy <- ho %>%
mutate(Date = as.Date(Date)) %>%
select(-Wales) %>%
pivot_longer(-Date, names_to = "region", values_to = "ho")
full_join(lr_tidy, ho_tidy)
full_join(lr_tidy, ho_tidy) %>%
filter(Date >= "1995-01-01")
lr_tidy <- lr %>%
mutate(region = str_to_title(region)) %>%
select(Date = date, region, "Land Registry" = housePriceIndex)
ho <- as_tibble(ukhp_get(classification = "countries"))
ho_tidy <- ho %>%
mutate(Date = as.Date(Date)) %>%
select(-Wales) %>%
pivot_longer(-Date, names_to = "region", values_to = "Housing Observatory")
full_join(lr_tidy, ho_tidy) %>%
filter(Date >= "1995-01-01") %>%
pivot_longer()
full_join(lr_tidy, ho_tidy) %>%
filter(Date >= "1995-01-01")
full_join(lr_tidy, ho_tidy) %>%
filter(Date >= "1995-01-01") %>%
pivot_longer(-Date, -region)
full_join(lr_tidy, ho_tidy) %>%
filter(Date >= "1995-01-01") %>%
pivot_longer(-Date, -region)
full_join(lr_tidy, ho_tidy) %>%
filter(Date >= "1995-01-01") %>%
pivot_longer(cols = vars(-Date, -region))
full_join(lr_tidy, ho_tidy) %>%
filter(Date >= "1995-01-01") %>%
pivot_longer(cols = c("Land Registry", "Housing Observatory"))
full_join(lr_tidy, ho_tidy) %>%
filter(Date >= "1995-01-01") %>%
pivot_longer(cols = c("Land Registry", "Housing Observatory")) %>%
group_by(name) %>%
mutate(value = value/value[1])
full_join(lr_tidy, ho_tidy) %>%
filter(Date >= "1995-02-01") %>%
pivot_longer(cols = c("Land Registry", "Housing Observatory")) %>%
group_by(name) %>%
mutate(value = value/value[1])
tbl <- full_join(lr_tidy, ho_tidy) %>%
filter(Date >= "1995-02-01") %>%
pivot_longer(cols = c("Land Registry", "Housing Observatory")) %>%
group_by(name) %>%
mutate(value = value/value[1])
ggplot(tbl, aes(Date, value, col = name)) +
geom_line() +
theme_bw()
ggplot(tbl, aes(Date, value, col = name), size = 0.8) +
geom_line() +
theme_bw()
ggplot(tbl, aes(Date, value, col = name), size = 0.9) +
geom_line() +
theme_bw()
ggplot(tbl, aes(Date, value, col = name)) +
geom_line( size = 0.9) +
theme_bw()
ggplot(tbl, aes(Date, value, col = name)) +
geom_line( size = 0.9) +
theme_bw() +
theme(
axis.title = element_blank(),
legend.title = element_blank()
)
ggplot(tbl, aes(Date, value, col = name)) +
geom_line( size = 0.9) +
theme_bw() +
theme(
axis.title = element_blank(),
legend.title = element_blank(),
legend.position = "bottom"
)
ggplot(tbl, aes(Date, value, col = name)) +
geom_line( size = 0.9) +
theme_bw() +
theme(
axis.title = element_blank(),
legend.title = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 20)
)
ggplot(tbl, aes(Date, value, col = name)) +
geom_line( size = 0.9) +
theme_bw() +
theme(
axis.title = element_blank(),
legend.title = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 16)
)
ggplot(tbl, aes(Date, value, col = name)) +
geom_line( size = 0.9) +
theme_bw() +
theme(
axis.title = element_blank(),
legend.title = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 14)
)
ggplot(tbl, aes(Date, value, col = name)) +
geom_line( size = 0.9) +
theme_bw() +
theme(
axis.title = element_blank(),
legend.title = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 12)
)
ggplot(tbl, aes(Date, value, col = name)) +
geom_line( size = 0.9) +
scale_x_date(breaks = "5 years", labels = "%Y")
ggplot(tbl, aes(Date, value, col = name)) +
geom_line( size = 0.9) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme_bw() +
theme(
axis.title = element_blank(),
legend.title = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 12)
)
getwd()
here()
library(here)
install.packages("here")
here()
library(here)
?here
here::dr_here()
here::dr_here()
here()
ggsave(here("assets", "img", "comparison.png"), width = 5, height = 4)
ggplot(tbl, aes(Date, value, col = name)) +
geom_line( size = 0.9) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme_bw() +
theme(
axis.title = element_blank(),
legend.title = element_blank(),
legend.position = c(0.95, 0.05),
legend.text = element_text(size = 10)
)
ggplot(tbl, aes(Date, value, col = name)) +
geom_line( size = 0.9) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme_bw() +
theme(
axis.title = element_blank(),
legend.title = element_blank(),
legend.position = c(0.1, 0.9),
legend.text = element_text(size = 10)
)
ggplot(tbl, aes(Date, value, col = name)) +
geom_line( size = 0.9) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme_bw() +
theme(
axis.title = element_blank(),
legend.title = element_blank(),
legend.position = c(0.1, 0.9),
legend.background = element_blank(),
legend.text = element_text(size = 10)
)
ggplot(tbl, aes(Date, value, col = name)) +
geom_line( size = 0.9) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme_bw() +
theme(
axis.title = element_blank(),
legend.title = element_blank(),
legend.position = c(0.2, 0.8),
legend.background = element_blank(),
egend.key = element_blank(),
legend.text = element_text(size = 10)
)
ggplot(tbl, aes(Date, value, col = name)) +
geom_line( size = 0.9) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme_bw() +
theme(
axis.title = element_blank(),
legend.title = element_blank(),
legend.position = c(0.2, 0.8),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(size = 10)
)
ggplot(tbl, aes(Date, value, col = name)) +
geom_line( size = 0.9) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme_bw() +
theme(
axis.title = element_blank(),
legend.title = element_blank(),
legend.position = c(0.2, 0.8),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(size = 11)
)
ggsave(here("assets", "img", "comparison.png"), width = 5, height = 4)
ggplot(tbl, aes(Date, value, col = name)) +
geom_line( size = 0.9) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme_bw() +
theme(
axis.title = element_blank(),
legend.title = element_blank(),
legend.position = c(0.25, 0.75),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(size = 10)
)
ggsave(here("assets", "img", "comparison.png"), width = 5, height = 4)
ggplot(tbl, aes(Date, value, col = name)) +
geom_line( size = 0.9) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme_bw() +
theme(
axis.title = element_blank(),
legend.title = element_blank(),
legend.position = c(0.25, 0.85),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(size = 10)
)
ggsave(here("assets", "img", "comparison.png"), width = 5, height = 4)
ggplot(tbl, aes(Date, value, col = name)) +
geom_line( size = 0.9) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme_bw() +
ggtitle("England and Wales House Price Index")
ggplot(tbl, aes(Date, value, col = name)) +
geom_line( size = 0.9) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme_bw() +
ggtitle("England and Wales House Price Index") +
theme(
axis.title = element_blank(),
legend.title = element_blank(),
legend.position = c(0.25, 0.85),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(size = 10)
)
ggplot(tbl, aes(Date, value, col = name)) +
geom_line( size = 0.9) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme_bw() +
ggtitle("House Price Index", caption = "England and Wales") +
theme(
axis.title = element_blank(),
legend.title = element_blank(),
legend.position = c(0.25, 0.85),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(size = 10)
)
ggplot(tbl, aes(Date, value, col = name)) +
geom_line( size = 0.9) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme_bw() +
ggtitle("House Price Index", sub = "England and Wales") +
theme(
axis.title = element_blank(),
legend.title = element_blank(),
legend.position = c(0.25, 0.85),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(size = 10)
)
ggsave(here("assets", "img", "comparison.png"), width = 5, height = 4)
ggplot(tbl, aes(Date, value, col = name)) +
geom_line( size = 0.9) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme_bw() +
ggtitle("House Price Index", sub = "England and Wales") +
scale_color_manual(values = c("#B22222", "green"))
ggplot(tbl, aes(Date, value, col = name)) +
geom_line( size = 0.9) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme_bw() +
ggtitle("House Price Index", sub = "England and Wales") +
scale_color_manual(values = c("firebrick", "green"))
ggplot(tbl, aes(Date, value, col = name)) +
geom_line( size = 0.9) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme_bw() +
ggtitle("House Price Index", sub = "England and Wales") +
scale_color_manual(values = c("#B22222", "green"))
ggplot(tbl, aes(Date, value, col = name)) +
geom_line( size = 0.9) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme_bw() +
ggtitle("House Price Index", sub = "England and Wales") +
scale_color_manual(values = c("#B22222", "green")) +
theme(
axis.title = element_blank(),
legend.title = element_blank(),
legend.position = c(0.25, 0.85),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(size = 10)
)
ggsave(here("assets", "img", "comparison.png"), width = 5, height = 4)
ggplot(tbl, aes(Date, value, col = name)) +
geom_line( size = 0.9) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme_bw() +
ggtitle("House Price Index", sub = "England and Wales") +
scale_color_manual(values = c("#B22222", "#5A8006")) +
theme(
axis.title = element_blank(),
legend.title = element_blank(),
legend.position = c(0.25, 0.85),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(size = 10)
)
ggplot(tbl, aes(Date, value, col = name)) +
geom_line( size = 0.9) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme_bw() +
ggtitle("House Price Index", sub = "England and Wales") +
scale_color_manual(values = c("red", "#a6d71c")) +
theme(
axis.title = element_blank(),
legend.title = element_blank(),
legend.position = c(0.25, 0.85),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(size = 10)
)
ggsave(here("assets", "img", "comparison.png"), width = 5, height = 4)
