library(tidyverse)
library(lubridate)
download.file("https://raw.githubusercontent.com/nik01010/dashboardthemes/master/R/dashboardthemes.R",
"R/dashboardthemes-functions.R")
download.file("http://geoportal1-ons.opendata.arcgis.com/datasets/01fd6b2d7600446d8af768005992f76a_4.zip",
destfile = "data/nuts1/Shapefile.zip")
zip::unzip("data/nuts1/Shapefile.zip", exdir = "data/nuts1")
download.file("http://geoportal1-ons.opendata.arcgis.com/datasets/48b6b85bb7ea43699ee85f4ecd12fd36_4.zip",
destfile = "data/nuts2/Shapefile.zip")
zip::unzip("data/nuts2/Shapefile.zip", exdir = "data/nuts2")
download.file("http://geoportal1-ons.opendata.arcgis.com/datasets/473aefdcee19418da7e5dbfdeacf7b90_4.zip",
destfile = "data/nuts3/Shapefile.zip")
zip::unzip("data/nuts3/Shapefile.zip", exdir = "data/nuts3")
library(here)
source(here("R", "00-functions.R"))
source(here("R", "01-read.R"))
ntwd_data %>%
select(Date, region, rhpi) %>%
spread(region, rhpi)
library(exuber)
radf_price <- price %>%
radf(lag = 1, minw = 37)
radf_income <-
price_income %>%
radf(lag = 1, minw = 37)
cv_price <- mc_cv(NROW(rhpi), opt_bsadf = "conservative", minw = 37)
cv_income <- mc_cv(NROW(rhp_pdi), opt_bsadf = "conservative", minw = 37)
summary_price <-
radf_price %>%
summary(cv = cv_price)
summary_income <-
radf_income %>%
summary(cv = cv_income)
rejected_price <-
radf_price %>%
diagnostics(cv = cv_price) %>%
.$rejected
rejected_income <-
radf_income %>%
diagnostics(cv = cv_income) %>%
.$rejected
datestamp_price <-
radf_price %>%
datestamp(cv = cv_price)
datestamp_income <-
radf_income %>%
datestamp(cv = cv_income)
autoplot_price <-
radf_price %>%
autoplot(include = TRUE, cv = cv_price, arrange = FALSE) %>%
map( ~.x + scale_custom(object = fortify(radf_price, cv = cv_price)) +
theme(title = element_blank()))
autoplot_income <-
radf_income %>%
autoplot(include = TRUE, cv = cv_income, arrange = FALSE) %>%
map( ~.x + scale_custom(object = fortify(radf_price, cv = cv_price)) +
theme(title = element_blank()))
autoplot_datestamp_price <-
datestamp_price %>%
autoplot(cv = cv_price) +
scale_custom(fortify(radf_price, cv = cv_price)) +
scale_color_viridis_d()
autoplot_datestamp_income <-
datestamp_income %>%
autoplot(cv = cv_income) +
scale_custom(fortify(radf_price, cv = cv_price)) +
scale_color_viridis_d()
price <- ntwd_data %>%
select(Date, region, rhpi) %>%
spread(region, rhpi)
ntwd_data
afford <- ntwd_data %>%
select(Date, region, afford) %>%
spread(region, afford)
# Price
plot_price <- list()
for (i in seq_along(slider_names)) {
shade <- datestamp_price %>% "[["(slider_names[i])
plot_price[[i]] <-
filter(price, Date <= ind[1]) %>%
ggplot() +
geom_line(aes_string(x = "Date", y = as.name(slider_names[i])),
size = 0.7, colour = "black") +
scale_custom(object = fortify(radf_price, cv = cv_price)) +
# geom_smooth(method = "lm", se = FALSE,
#             aes_string("Date", as.name(slide_names[i]))) +
theme_light() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank()) +
geom_rect(data = shade[, -3], fill = "grey", alpha = 0.35, #0.25
aes_string(xmin = "Start", xmax = "End",
ymin = -Inf, ymax = +Inf))
}
# Price
plot_price <- list()
for (i in seq_along(nms$names)) {
shade <- datestamp_price %>% "[["(nms$names[i])
plot_price[[i]] <-
filter(price, Date <= ind[1]) %>%
ggplot() +
geom_line(aes_string(x = "Date", y = as.name(nms$names[i])),
size = 0.7, colour = "black") +
scale_custom(object = fortify(radf_price, cv = cv_price)) +
# geom_smooth(method = "lm", se = FALSE,
#             aes_string("Date", as.name(slide_names[i]))) +
theme_light() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank()) +
geom_rect(data = shade[, -3], fill = "grey", alpha = 0.35, #0.25
aes_string(xmin = "Start", xmax = "End",
ymin = -Inf, ymax = +Inf))
}
?remotes::install_local()
install.packages("golem")
install.packages("golem")
